#!/usr/bin/env ruby

# A script which will copy the directories /etc and /home
# into /var/backups/network/backups/example.com/#{date}.  Note that
# we wanted to get everything - even private keys owned by root
# on the remote server, so some hacks had to be employed
#
# 1. A private key was generated by the client's root account, 
#    named "rsync-key".  The key has no password.  The public key was copied via
#    scp to a new user on the remote system "nbackup" (network backup)
#    who then stores that key in ~/.ssh/authorized_keys.  
# 
# 2. But this account still needs root access, so we accomplish this
#    by adding --rsync-path="sudo rsync" to authenticate as root
#    via sudo on the server.
# 
# 3. A security precaution here was taken: the user was given a very
#    strong, random password (generated via makepasswd), so brute force
#    would be nearly impossible.  The nbackup user was also given sudo
#    access *only* to the command rsync.     
# 
# Some Further Security precautions can also be taken: 
# 
# 1. Only allow *this* command (run from the client) to be run through
#    ssh login.  Specify this in the nbackup users authorized_keys file
# 2. Be more specific in the sudoers file pertaining to the exact specifications
#    of the rsync command
# 


require "dated_backup"

DatedBackup.new(
  :user_domain => "nbackup@example.com",
  :options => '-v -e "ssh -i /root/.ssh/rsync-key" --rsync-path="sudo rsync"',
  :sources => %w(/etc /home),
  :destination => "/var/backups/network/backups/example.com"
).run